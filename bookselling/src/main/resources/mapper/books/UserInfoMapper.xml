<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.books.mapper.UserInfoMapper">

    <resultMap type="UserInfo" id="UserInfoResult">
        <id     property="userId"           column="user_id"    />
        <result property="userName"         column="user_name"    />
        <result property="password"         column="password" />
        <result property="bio"              column="bio"    />
        <result property="userRole"         column="user_role"    />
        <result property="avatarImg"        column="avatar_img"    />
        <result property="createBy"         column="create_by"    />
        <result property="createTime"       column="create_time"    />
        <result property="updateBy"         column="update_by"    />
        <result property="updateTime"       column="update_time"    />
    </resultMap>

    <sql id="selectUserInfoVo">
        select user_id, user_name, bio, user_role, avatar_img, create_by, create_time, update_by, update_time
        from user_info
    </sql>

    <select id="selectUserInfoList" parameterType="UserInfo" resultMap="UserInfoResult">
        <include refid="selectUserInfoVo"/>
        <where>
            <if test="userId != null and userId != ''"> and user_id = #{userId}</if>
            <if test="userName != null and userName != ''"> and user_name like concat('%', #{userName}, '%')</if>
            <if test="bio != null  and bio != ''"> and bio like concat('%', #{bio}, '%')</if>
            <if test="userRole != null"> and user_role = #{userRole}</if>
        </where>
    </select>

    <select id="selectUserInfoByUserId" parameterType="Long" resultMap="UserInfoResult">
        <include refid="selectUserInfoVo"/>
        where user_id = #{userId};
    </select>

    <select id="getPwdByUserId" parameterType="Long" resultType="String">
        select `password` from user_info
        where user_id = #{userId};
    </select>

    <insert id="insertUserInfo" parameterType="UserInfo" useGeneratedKeys="true" keyProperty="userId">
        insert into user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null and userName != ''">user_name,</if>
            <if test="bio != null and bio != ''">bio,</if>
            <if test="userRole != null">user_role,</if>
            <if test="avatarImg != null and avatarImg != ''">avatar_img,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            <if test="createTime != null">create_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userName != null and userName != ''">#{user_name},</if>
            <if test="bio != null and bio != ''">#{bio},</if>
            <if test="userRole != null">#{user_role},</if>
            <if test="avatarImg != null and avatarImg != ''">#{avatar_img},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
        </trim>
    </insert>

    <update id="updateUserInfo" parameterType="UserInfo">
        update user_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="userName != null and userName != ''">user_name = #{userName},</if>
            <if test="bio != null and bio != ''">bio = #{bio},</if>
            <if test="userRole != null">user_role = #{userRole},</if>
            <if test="avatarImg != null and avatarImg != ''">avatar_img = #{avatarImg},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where user_id = #{userId}
    </update>

    <delete id="deleteUserInfoByUserId" parameterType="Long">
        delete from user_info where user_id = #{userId}
    </delete>

    <delete id="deleteUserInfoByUserIds" parameterType="String">
        delete from user_info where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>
</mapper>